package MallMap;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Floor1 extends JFrame {
    private CardLayout cardLayout;
    JPanel mainPanel1;
    JPanel buttonPanel;
    private JButton btnFirstFloor, btnSecondFloor, btnThirdFloor;
    private JButton btnRestroom, btnStorage;
    private Timer blinkTimerRestroom, blinkTimerStorage;
    private boolean isBlinkingRestroom = false;
    private boolean isBlinkingStorage = false;

    public Floor1() {
        setTitle("Floor1");
        setSize(2000, 1000);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());

        JLabel headerLabel = new JLabel("First Floor", JLabel.CENTER);
        headerLabel.setFont(new Font("Arial", Font.BOLD, 24));
        headerLabel.setBorder(BorderFactory.createEmptyBorder(20, 0, 20, 0));
        add(headerLabel, BorderLayout.NORTH);

        cardLayout = new CardLayout();
        mainPanel1 = new JPanel(cardLayout);

        JPanel mapPanel = createMapPanel();
        mainPanel1.add(mapPanel, "Map");

        addStorePanels();

        add(mainPanel1, BorderLayout.CENTER);
        add(createFloorNavigationPanel(), BorderLayout.SOUTH);

        // Create and add the menubuttonpanel
        menubuttonpanel panelCreator = new menubuttonpanel();
        JPanel menuPanel = panelCreator.createPanel();
        add(menuPanel, BorderLayout.EAST);

        buttonPanel = new JPanel();
        btnFirstFloor = new JButton("1층");
        btnSecondFloor = new JButton("2층");
        btnThirdFloor = new JButton("3층");
        JButton restroomLocation = new JButton("화장실 위치 안내");
        JButton boxLocation = new JButton("물품보관함 위치 안내");

        btnFirstFloor.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new Floor1().setVisible(true);
            }
        });

        btnSecondFloor.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new Floor2().setVisible(true);
            }
        });

        btnThirdFloor.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new Floor3().setVisible(true);
            }
        });

        restroomLocation.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                startBlinking(btnRestroom, 7);
            }
        });
    

        boxLocation.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                startBlinking(btnStorage, 7);
            }
        
        });

        buttonPanel.add(btnFirstFloor);
        buttonPanel.add(btnSecondFloor);
        buttonPanel.add(btnThirdFloor);
        buttonPanel.add(restroomLocation);
        buttonPanel.add(boxLocation);

        add(buttonPanel, BorderLayout.SOUTH);
        cardLayout.show(mainPanel1, "Map");
    }
    

    private JPanel createMapPanel() {
        JPanel mapPanel = new JPanel();
        mapPanel.setLayout(null); // Use absolute positioning for custom layout

        // Create buttons for each store
        int buttonSize = 150; // Increased button size
        int spacing = 150; // Adjust spacing
        int offsetX = 300; // Move to the right
        int offsetY = 100; // Move down

        JButton btn8Seconds = createCustomButton("에잇세컨즈");
        btn8Seconds.setBounds(offsetX, offsetY, buttonSize, buttonSize);
        btn8Seconds.addActionListener(new StoreButtonListener("8Seconds"));
        applyRollOverEffect(btn8Seconds); // Apply dramatic effect
        mapPanel.add(btn8Seconds);

        JButton btnMixxo = createCustomButton("미쏘");
        btnMixxo.setBounds(offsetX, offsetY + spacing, buttonSize, buttonSize);
        btnMixxo.addActionListener(new StoreButtonListener("Mixxo"));
        applyRollOverEffect(btnMixxo); // Apply dramatic effect
        mapPanel.add(btnMixxo);

        JButton btnMooin = createCustomButton("무인양품");
        btnMooin.setBounds(offsetX, offsetY + 2 * spacing, buttonSize, buttonSize);
        btnMooin.addActionListener(new StoreButtonListener("Mooin"));
        applyRollOverEffect(btnMooin); // Apply dramatic effect
        mapPanel.add(btnMooin);

        JButton btnHM = createCustomButton("H&M");
        btnHM.setBounds(offsetX + spacing, offsetY + 2 * spacing, buttonSize, buttonSize);
        btnHM.addActionListener(new StoreButtonListener("HM"));
        applyRollOverEffect(btnHM); // Apply dramatic effect
        mapPanel.add(btnHM);

        JButton btnMinigold = createCustomButton("미니골드");
        btnMinigold.setBounds(offsetX + 2 * spacing, offsetY + 2 * spacing, buttonSize, buttonSize);
        btnMinigold.addActionListener(new StoreButtonListener("Minigold"));
        applyRollOverEffect(btnMinigold); // Apply dramatic effect
        mapPanel.add(btnMinigold);

        JButton btnShoopen = createCustomButton("슈펜");
        btnShoopen.setBounds(offsetX + 3 * spacing, offsetY + 2 * spacing, buttonSize, buttonSize);
        btnShoopen.addActionListener(new StoreButtonListener("Shoopen"));
        applyRollOverEffect(btnShoopen); // Apply dramatic effect
        mapPanel.add(btnShoopen);

        JButton btn66 = createCustomButton("육육걸즈");
        btn66.setBounds(offsetX + 2 * spacing, offsetY, buttonSize, buttonSize);
        btn66.addActionListener(new StoreButtonListener("66Girls"));
        applyRollOverEffect(btn66); // Apply dramatic effect
        mapPanel.add(btn66);

        JButton btnNanning9 = createCustomButton("난닝구");
        btnNanning9.setBounds(offsetX + 3 * spacing, offsetY, buttonSize, buttonSize);
        btnNanning9.addActionListener(new StoreButtonListener("Nanning9"));
        applyRollOverEffect(btnNanning9); // Apply dramatic effect
        mapPanel.add(btnNanning9);

        btnRestroom = createCustomButton("🚻");
        btnRestroom.setBounds(offsetX + 4 * spacing, offsetY, 75, buttonSize); // Adjusted restroom size
        Font buttonFont = btnRestroom.getFont();
        Font newFont = new Font(buttonFont.getName(), buttonFont.getStyle(), 40);
        btnRestroom.setFont(newFont);
        btnRestroom.addActionListener(new StoreButtonListener("Restroom"));
        applyRollOverEffect(btnRestroom);
        mapPanel.add(btnRestroom);
        
        btnStorage = createCustomButton("Storage");
        Font boxFont = btnStorage.getFont();
        Font BoxFont = new Font(boxFont.getName(), boxFont.getStyle(), 7); // Adjust the font size here
        btnStorage.setFont(BoxFont);
        btnStorage.addActionListener(new StoreButtonListener("Storage"));
        btnStorage.setBounds(offsetX + spacing , offsetY + spacing, 50, 50); // Adjusted position
        mapPanel.add(btnStorage);
     
        
        // Draw lines to separate the buttons
        int lineThickness = 15; // Increased line thickness
        mapPanel.add(createSeparator(offsetX, offsetY + buttonSize, buttonSize, lineThickness));
        mapPanel.add(createSeparator(offsetX, offsetY + buttonSize + spacing, buttonSize, lineThickness));
        mapPanel.add(createSeparator(offsetX, offsetY + buttonSize + 2 * spacing, buttonSize, lineThickness));
        mapPanel.add(createSeparator(offsetX + spacing, offsetY + buttonSize + 2 * spacing, buttonSize, lineThickness));
        mapPanel.add(createSeparator(offsetX + 2 * spacing, offsetY + buttonSize + 2 * spacing, buttonSize, lineThickness));
        mapPanel.add(createSeparator(offsetX + 3 * spacing, offsetY + buttonSize + 2 * spacing, buttonSize, lineThickness));
        mapPanel.add(createSeparator(offsetX + 2 * spacing, offsetY + buttonSize, buttonSize, lineThickness));
        mapPanel.add(createSeparator(offsetX + 3 * spacing, offsetY + buttonSize, buttonSize, lineThickness));
        mapPanel.add(createSeparator(offsetX + 4 * spacing, offsetY + buttonSize, 50, lineThickness));

        return mapPanel;
    }


    private JPanel createFloorNavigationPanel() {
        JPanel floorNavPanel = new JPanel();
        JButton firstFloorBtn = new JButton("1층");
        JButton secondFloorBtn = new JButton("2층");
        JButton thirdFloorBtn = new JButton("3층");

        firstFloorBtn.addActionListener(e -> cardLayout.show(mainPanel1, "Map"));
        secondFloorBtn.addActionListener(e -> new Floor2().setVisible(true));
        thirdFloorBtn.addActionListener(e -> new Floor3().setVisible(true));

        floorNavPanel.add(firstFloorBtn);
        floorNavPanel.add(secondFloorBtn);
        floorNavPanel.add(thirdFloorBtn);

        return floorNavPanel;
    }
    
   	private JPanel createFirstFloorPanel() {
        JPanel panel = new JPanel();
        return panel;
    }

    private void addStorePanels() {
        	
        	ImageIcon eightSecondsImage = new ImageIcon("/Users/choijiwon/Desktop/3-1 OOP/MallMap/MallMap/src/img/eightsSeconds.png");
        	Image img = eightSecondsImage.getImage();
        	Image newImg = img.getScaledInstance(650, 450, Image.SCALE_SMOOTH);
        	eightSecondsImage = new ImageIcon(newImg);
        	mainPanel1.add(createStorePanel1(eightSecondsImage, "8Seconds"), "8Seconds");
        	
        	ImageIcon mixxoImage = new ImageIcon("/Users/choijiwon/Desktop/3-1 OOP/MallMap/MallMap/src/img/mixxo.png");
        	Image img2 = eightSecondsImage.getImage();
        	Image newImg2 = img.getScaledInstance(650, 450, Image.SCALE_SMOOTH);
        	mixxoImage = new ImageIcon(newImg2);
        	mainPanel1.add(createStorePanel2(mixxoImage, "Mixxo"), "Mixxo");
        	
        	ImageIcon mooinImage = new ImageIcon("/Users/choijiwon/Desktop/3-1 OOP/MallMap/MallMap/src/img/mooin.png");
        	Image img3 = mooinImage.getImage();
        	Image newImg3 = img.getScaledInstance(650, 450, Image.SCALE_SMOOTH);
        	mooinImage = new ImageIcon(newImg3);
        	mainPanel1.add(createStorePanel3(mooinImage, "Mooin"), "Mooin");
        	
        	ImageIcon HMImage = new ImageIcon("/Users/choijiwon/Desktop/3-1 OOP/MallMap/MallMap/src/img/hm.png");
        	Image img4 = HMImage.getImage();
        	Image newImg4 = img.getScaledInstance(650, 450, Image.SCALE_SMOOTH);
        	HMImage = new ImageIcon(newImg4);
        	mainPanel1.add(createStorePanel4(HMImage, "HM"), "HM");
        	
        	ImageIcon minigoldImage = new ImageIcon("/Users/choijiwon/Desktop/3-1 OOP/MallMap/MallMap/src/img/minigold.png");
        	Image img5 = minigoldImage.getImage();
        	Image newImg5 = img.getScaledInstance(650, 450, Image.SCALE_SMOOTH);
        	minigoldImage = new ImageIcon(newImg5);
        	mainPanel1.add(createStorePanel5(minigoldImage, "Minigold"), "Minigold");
        	
        	ImageIcon shoopenImage = new ImageIcon("/Users/choijiwon/Desktop/3-1 OOP/MallMap/MallMap/src/img/shoopen.png");
        	Image img6 = shoopenImage.getImage();
        	Image newImg6 = img.getScaledInstance(650, 450, Image.SCALE_SMOOTH);
        	shoopenImage = new ImageIcon(newImg5);
        	mainPanel1.add(createStorePanel6(shoopenImage, "Shoopen"), "Shoopen");
        	
        	ImageIcon girlsImage = new ImageIcon("/Users/choijiwon/Desktop/3-1 OOP/MallMap/MallMap/src/img/66girls.png");
        	Image img7 = girlsImage.getImage();
        	Image newImg7 = img.getScaledInstance(650, 450, Image.SCALE_SMOOTH);
        	girlsImage = new ImageIcon(newImg7);
        	mainPanel1.add(createStorePanel6(girlsImage, "66Girls"), "66Girls");
        	
        	ImageIcon nanning9Image = new ImageIcon("/Users/choijiwon/Desktop/3-1 OOP/MallMap/MallMap/src/img/nanning9.png");
        	Image img8 = nanning9Image.getImage();
        	Image newImg8 = img.getScaledInstance(650, 450, Image.SCALE_SMOOTH);
        	nanning9Image = new ImageIcon(newImg8);
        	mainPanel1.add(createStorePanel7(nanning9Image, "Nanning9"), "Nanning9");

        }


        private JPanel createStorePanel1(ImageIcon eightsecondImage, String str1) {
            JPanel panel = new JPanel();
            panel.add(new JLabel(eightsecondImage));
            
            JButton eightSecondButton = new JButton("매장 정보 바로가기");
   	  		panel.add(eightSecondButton, "매장 정보 바로가기");

   	  		eightSecondButton.addActionListener(new ActionListener() {
   		      @Override
   		      public void actionPerformed(ActionEvent e) {
   		          //경로 
   		      }
   		  });
            return panel;
        }
        
        
        private JPanel createStorePanel2(ImageIcon mixxoImage, String str2) {
            JPanel panel = new JPanel();
            panel.add(new JLabel(mixxoImage));
            
            JButton mixxoButton = new JButton("매장 정보 바로가기");
   	  		panel.add(mixxoButton, "매장 정보 바로가기");

   	  		mixxoButton.addActionListener(new ActionListener() {
   		      @Override
   		      public void actionPerformed(ActionEvent e) {
   		          //경로 
   		      }
   		  });
            return panel;
        }
        
        
        private JPanel createStorePanel3(ImageIcon mooinImage, String str3) {
            JPanel panel = new JPanel();
            panel.add(new JLabel(mooinImage));
            
            JButton mooinButton = new JButton("매장 정보 바로가기");
   	  		panel.add(mooinButton, "매장 정보 바로가기");

   	  		mooinButton.addActionListener(new ActionListener() {
   		      @Override
   		      public void actionPerformed(ActionEvent e) {
   		          //경로 
   		      }
   		  });
            return panel;
        }
        
        
        private JPanel createStorePanel4(ImageIcon HMImage, String str4) {
            JPanel panel = new JPanel();
            panel.add(new JLabel(HMImage));
            
            JButton HMButton = new JButton("매장 정보 바로가기");
   	  		panel.add(HMButton, "매장 정보 바로가기");

   	  		HMButton.addActionListener(new ActionListener() {
   		      @Override
   		      public void actionPerformed(ActionEvent e) {
   		          //경로 
   		      }
   		  });
            return panel;
        }
        
        
        private JPanel createStorePanel5(ImageIcon minigoldImage, String str5) {
            JPanel panel = new JPanel();
            panel.add(new JLabel(minigoldImage));
            
            JButton minigoldButton = new JButton("매장 정보 바로가기");
   	  		panel.add(minigoldButton, "매장 정보 바로가기");

   	  		minigoldButton.addActionListener(new ActionListener() {
   		      @Override
   		      public void actionPerformed(ActionEvent e) {
   		          //경로 
   		      }
   		  });
            return panel;
        }
        
        
        private JPanel createStorePanel6(ImageIcon shoopenImage, String str6) {
            JPanel panel = new JPanel();
            panel.add(new JLabel(shoopenImage));
            
            JButton shoopenButton = new JButton("매장 정보 바로가기");
   	  		panel.add(shoopenButton, "매장 정보 바로가기");

   	  		shoopenButton.addActionListener(new ActionListener() {
   		      @Override
   		      public void actionPerformed(ActionEvent e) {
   		          //경로 
   		      }
   		  });
            return panel;
        }
        
        
        private JPanel createStorePanel7(ImageIcon  girlsImage, String str7) {
            JPanel panel = new JPanel();
            panel.add(new JLabel( girlsImage));
            
            JButton girlsButton = new JButton("매장 정보 바로가기");
   	  		panel.add(girlsButton, "매장 정보 바로가기");

   	  		girlsButton.addActionListener(new ActionListener() {
   		      @Override
   		      public void actionPerformed(ActionEvent e) {
   		          //경로 
   		      }
   		  });
            return panel;
        }
        
        
        private JPanel createStorePanel8(ImageIcon nanning9Image, String str7) {
            JPanel panel = new JPanel();
            panel.add(new JLabel( nanning9Image));
            
            JButton nanning9Button = new JButton("매장 정보 바로가기");
   	  		panel.add(nanning9Button, "매장 정보 바로가기");

   	  		nanning9Button.addActionListener(new ActionListener() {
   		      @Override
   		      public void actionPerformed(ActionEvent e) {
   		          //경로 
   		      }
   		  });
            return panel;
        }
        
    

    private JButton createCustomButton(String text) {
        JButton button = new JButton(text);
        button.setFont(new Font("Arial", Font.PLAIN, 20));
        button.setFocusPainted(false);
        button.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        return button;
    }

    private void applyRollOverEffect(JButton button) {
        button.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                button.setFont(button.getFont().deriveFont(Font.BOLD, 26f)); // Larger font size for dramatic effect
                button.setBackground(new Color(158, 188, 219)); // Highlight the button
                button.setOpaque(true);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                button.setFont(button.getFont().deriveFont(Font.PLAIN, 20f)); // Revert font size
                button.setBackground(UIManager.getColor("Button.background")); // Revert button color
                button.setOpaque(false);
            }
        });
    }

    private JLabel createSeparator(int x, int y, int width, int height) {
        JLabel separator = new JLabel();
        separator.setOpaque(true);
        separator.setBackground(Color.BLACK);
        separator.setBounds(x, y, width, height);
        return separator;
    }  private void startBlinking(JButton button, int duration) {
        Timer blinkTimer = new Timer(500, new ActionListener() {
            private int counter = 0;
            
            @Override
            public void actionPerformed(ActionEvent e) {
                if (counter < duration * 2) {
                    button.setVisible(!button.isVisible());
                    counter++;
                } else {
                    button.setVisible(true);
                    ((Timer) e.getSource()).stop();
                }
            }
        });
        blinkTimer.start();

        if (button == btnRestroom) {
            blinkTimerRestroom = blinkTimer;
        } else if (button == btnStorage) {
            blinkTimerStorage = blinkTimer;
        }
    }

    private void stopBlinking(JButton button) {
        if (button == btnRestroom && blinkTimerRestroom != null) {
            blinkTimerRestroom.stop();
            btnRestroom.setVisible(true);
        } else if (button == btnStorage && blinkTimerStorage != null) {
            blinkTimerStorage.stop();
            btnStorage.setVisible(true);
        }
    }

    private class StoreButtonListener implements ActionListener {
        private String storeName;

        public StoreButtonListener(String storeName) {
            this.storeName = storeName;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            if (storeName.equals("Restroom")) {
                if (isBlinkingStorage) {
                    stopBlinking(btnStorage);
                    isBlinkingStorage = false;
                }
                isBlinkingRestroom = !isBlinkingRestroom;
                if (isBlinkingRestroom) {
                    startBlinking(btnRestroom, 7);
                } else {
                    stopBlinking(btnRestroom);
                }
            } else if (storeName.equals("Storage")) {
                if (isBlinkingRestroom) {
                    stopBlinking(btnRestroom);
                    isBlinkingRestroom = false;
                }
                isBlinkingStorage = !isBlinkingStorage;
                if (isBlinkingStorage) {
                    startBlinking(btnStorage, 7);
                } else {
                    stopBlinking(btnStorage);
                }
            } else {
                cardLayout.show(mainPanel1, storeName);
            }
        }
    }
    

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            Floor1 floor1 = new Floor1();
            floor1.setVisible(true);
        });
    }
}


